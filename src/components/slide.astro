---
import { Image } from 'astro:assets'
interface Props {
	image?:
		| {
				src: string
				width: number
				height: number
				format: 'png' | 'jpg' | 'jpeg' | 'tiff' | 'webp' | 'gif' | 'svg' | 'avif'
		  }
		| undefined
	title?: string | undefined
	author?: string | undefined
	other?: string | undefined
	index: number
	total: number
}

const { index, image, title, author, other, total } = Astro.props
---

<section
	id={index.toString()}
	class="relative h-screen w-screen flex-none snap-center bg-gray-900 p-4"
>
	{
		image && (
			<Image
				src={image}
				alt={title ?? ''}
				width={900}
				class="absolute left-0 top-0 h-full w-full object-contain p-4 md:h-full md:w-4/6"
			/>
		)
	}
	{
		(title || author || other) && (
			<figcaption class="absolute bottom-0 right-0 w-[30ch] max-w-full bg-gray-900/50 pb-16 pr-8 text-white md:text-lg ">
				{author && <span>{author}</span>}
				{title && <span class="italic ">{title}</span>}
				{other && <span>{other}</span>}
			</figcaption>
		)
	}
	{
		index > 0 && (
			<a
				href={`#${index - 1}`}
				aria-label="précédent"
				class="absolute left-8 top-1/2 text-white/60 hover:text-white focus:text-white"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke-width="1.5"
					stroke="currentColor"
					class="h-6 w-6"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						d="M19.5 12h-15m0 0l6.75 6.75M4.5 12l6.75-6.75"
					/>
				</svg>
			</a>
		)
	}
	{
		index < total - 1 && (
			<a
				href={`#${index + 1}`}
				aria-label="suivant"
				class="absolute right-8 top-1/2 text-white/60 hover:text-white focus:text-white"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke-width="1.5"
					stroke="currentColor"
					class="h-6 w-6"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"
					/>
				</svg>
			</a>
		)
	}
</section>

<style>
	figcaption span:not(:last-child)::after {
		content: ', ';
	}
</style>
