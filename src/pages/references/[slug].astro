---
import '@fontsource/chewy'
import '@fontsource/roboto'
import '@fontsource/roboto/400-italic.css'
import '@fontsource/roboto/700.css'
import type { GetStaticPaths, InferGetStaticParamsType, InferGetStaticPropsType } from 'astro'
import { getCollection } from 'astro:content'
import Slide from '../../components/slide.astro'
export const getStaticPaths = (async () => {
	const articles = await getCollection('articles')
	const withReferences = articles.filter((el) => el.data.references)
	return withReferences.map((el) => ({
		params: { slug: el.slug },
		props: { references: el.data.references!, title: el.data.title }
	}))
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { slug } = Astro.params

const { references, title } = Astro.props
---

<!doctype html>
<html lang="fr">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>{title}</title>
	</head>
	<body>
		<main class="flex w-screen snap-x snap-mandatory overflow-scroll scroll-smooth">
			{references.map((el, i) => <Slide {...el} index={i} total={references.length} />)}
			<a
				href={`/articles/${slug}/#references`}
				class="fixed right-4 top-4 text-white/80 hover:text-white focus:text-white"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke-width="1.5"
					stroke="currentColor"
					class="h-6 w-6"
				>
					<path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
				</svg>
			</a>
		</main>
	</body>
</html>
